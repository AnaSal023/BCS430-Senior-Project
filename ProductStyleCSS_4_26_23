<!DOCTYPE html>

<head>
    <link rel="stylesheet" href="ProductStyleCSS.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
    <link href="https://fonts.cdnfonts.com/css/bebas-neue" rel="stylesheet">

<body>

<!--Page Title-->
<title> Uni-Thirft</title>  
	
<!--Connects to the css file-->
    
    
    
    <!-- Navigation Bar-->
    <nav>
        <!-- This is our logo picture-->
            <a href ="index.html"><img  src="LOGO_BCS430W.png" class="logo"></a> 
            
                <!-- Navigation Bar Items-->
        <ul class="nav-links">                    
                    <!--All the header tabs-->
                    <li><a href="index.html">Home</a></li>                
                    <li><a href="products.html">Products</a></li> 
                    <li><a href="about.html">About</a></li> 
                    <li class= "btns2"><a href="login.html"><span>Login</span></a></li>
                    <li class= "btns3"><a href="signup.html"><span>Sign Up</span></a></li>  
                    <li><a href="shoppingcart.html">Shopping Cart <span id = "countOfItems" class="num-of-items">0</span></a></li>       
        </ul>          
    </nav>

 <!-- Search Bar -->
    <form id="searchForm">
        <input type="text" id="searchBar" placeholder="Search products...">
       <!-- <button type="search">Search</button> -->
      </form>

      <!-- Filter -->
      <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Filter
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
          <a class="dropdown-item " href="ProductsPage.html">Home</a>
          <a class="dropdown-item" href="HighestPrice.html"">Highest Price</a>
          <a class="dropdown-item" href="LowestPrice.html">Lowest Price</a>
          <a class="dropdown-item" href="Textbooks.html"">Textbooks</a>
          <a class="dropdown-item" href="SchoolSupply.html">School Supplies</a>
          <a class="dropdown-item" href="Furniture.html"">Furniture</a>
          <a class="dropdown-item" href="Electronics.html">Electronics</a>
        <!--<a class="dropdown-item" href="Discount.html"">Discounts</a>--> 
        </div>
      </div>
    

    <div id="productDiv" class="container">
  
    </div>
    
    <footer class="footer">
        <ul class="social-icon">
            <li class="social-icon__item"><a class="social-icon__link" href="https://www.facebook.com/">
                <ion-icon name="logo-facebook"></ion-icon>
              </a></li>
            <li class="social-icon__item"><a class="social-icon__link" href="https://twitter.com/">
                <ion-icon name="logo-twitter"></ion-icon>
              </a></li>
            <li class="social-icon__item"><a class="social-icon__link" href="https://www.instagram.com/uni.thrift.1/">
                <ion-icon name="logo-instagram"></ion-icon>
              </a></li>
          </ul>
        <ul class="menu">
          <li class="menu__item"><a class="menu__link" href="index.html">Home</a></li>
          <li class="menu__item"><a class="menu__link" href="products.html">Products</a></li>
          <li class="menu__item"><a class="menu__link" href="FAQ.html">FAQ</a></li>
          <li class="menu__item"><a class="menu__link" href="contactSeller.html">Contact Seller</a></li>
    
        </ul>
        <p>&copy;2023 Uni-Thrift | All Rights Reserved</p>
      </footer>
     <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
      <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script> 
    
    <script type="module">
    
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.17.1/firebase-app.js";
    
    
        // Your web app's Firebase configuration
        const firebaseConfig = {
        apiKey: "AIzaSyCboO05ASTNAeFOWdUARGE7MZYj7ZzxcEs",
        authDomain: "uni-thrift.firebaseapp.com",
        databaseURL: "https://uni-thrift-default-rtdb.firebaseio.com",
        projectId: "uni-thrift",
        storageBucket: "uni-thrift.appspot.com",
        messagingSenderId: "562171645836",
        appId: "1:562171645836:web:ded9a93970d0631ab4d0a9"
        };
    
        // Initialize Firebase
        const app = initializeApp(firebaseConfig);
    
        import{getDatabase, ref, child, onValue, set, get, push, remove,onChildAdded, onChildChanged, onChildRemoved,
    query,limitToFirst,limitToLast,orderByChild,orderByValue,startAt,startAfter,endAt,endBefore,equalTo} from "https://www.gstatic.com/firebasejs/9.17.1/firebase-database.js";
        
    
        const realdb = getDatabase();
    
        const productsRef = ref(realdb, 'Products');
        const CartRef = ref(realdb,  'Cart_Items');
    
        //When the window is loaded, then the following code is executed
        window.addEventListener('load', () => {
            const productDiv = document.getElementById('productDiv');
            const TheProducts = [];

            //This is how the filter will know what your currently at
            const current = window.location.href;
            const item=document.getElementsByClassName("dropdown-item");
            const size =item.length;
            for (let i=0; i<size;i++){
                if(item[i].href ==current){
                    item[i].className=  item[i].className.replace(" active", "");
                    item[i].className += " active";
                }
            }

           //Textbooks query
           const que = query(ref(realdb, "Products"),orderByChild("Category"),equalTo("Electronics"));

            //Once any changes happens to the 'productsRef' database references happens
            //then the following code should execute to display any new item added to the
            //'Product' table in firebase.
            onValue(que, (snapshot) => {
                snapshot.forEach((childSnapshot) => {
                    const childData = childSnapshot.val();
                    TheProducts.push(childData);
                });
                
                displayProducts(TheProducts);
            });
    
    
            //displays cart items database
            onValue(CartRef, (snapshot) => {
                snapshot.forEach((childSnapshot) => {
                    const childData = childSnapshot.val();
                    TheProducts.push(childData);
                });
                
                displayCart();
            });
    
    
            //This function helps displays the item in the page
            function displayProducts(products) {
                let productHTML = '';
                //This iterates over each product in the product array which we be used for the
                //'TheProducts' array created earlier and will the following HTML code for each
                //product to the productHTML string
                products.forEach((product) => {
                    let donateMessage = '';
                    let pickupMessage = '';
                    if (product.Donate === 'on') {
                        donateMessage = product.Pickup === 'on' ?
                        'Any Donated Items that are for pickup have a set shipping price of $0.00' :
                        'Any Donated Items that are not for pickup have a set shipping price of $5.00';
                    }
                    if (product.Pickup === 'on') {
                        pickupMessage = 'Any items that are for pickup only have a set shipping price of $0.00';
                    }
    
                    let priceMessage = '';
                    if (product.Price == null) {
                        if (product.Pickup === 'on' && product.Donate === 'on') {
                            priceMessage = 'There is no shipping price for this item';
                        } else if (product.Pickup === 'on') {
                            priceMessage = 'There is no shipping price for this item';
                        } else if (product.Donate === 'on') {
                            priceMessage = 'The shipping price is $5.00';
                        }
                    } else {
                        priceMessage = `The price is $${product.Price}`;
                    }
    
                    
                    productHTML += `
                        <div class="productcard">
                            <img src="${product.LinksOfImagesArray[0]}" alt="${product.ProductTitle}" class="img">
                                <h1 class="name">${product.Description}</h4>      
                                <h2 class="condition">Condition is ${product.Condition} </h2>                    
                                <h3 class="price">${priceMessage}</h3> 
                                <h4 class="donate"> ${product.Donate == "on" ? "This Product was donated" : ""}  
                                <span class="tooltiptext"> ${donateMessage} </span> </h4>
                                <h5 class="pickup"> ${product.Pickup == "on" ? "This Product is for pickup only" : ""}
                                <span class="tooltiptext">${pickupMessage}</span> </h5>
                                <h6 class="user">Seller Contact information: ${product.Email}</h6>
                                <h7 class="category">Category:  ${product.Category}</h7>
                                <button class="btns" data-image="${product.LinksOfImagesArray[0]}" data-item="${product.ProductTitle}" data-price="${product.Price}">Add to Cart</button>
                        </div>
                    `;
                   
                });
    
                productDiv.innerHTML = productHTML;



                const searchBar = document.querySelector("input"); // gets the searchBar

searchBar.addEventListener('input',() =>{ // waits for user input on searchBar
    const query = searchBar.value.trim().toLowerCase(); // query the value 
    if(query.length === 0){
        window.location.reload();
    }
    const matchingProducts = products.filter(product => {
        if (!product || !product.Description || typeof product.Description !== 'string') { // checks if the matches product Description
            return false; 
        }
        return product.Description.toLowerCase().includes(query); // filters the description
    });
    displayProducts(matchingProducts); // recursively recalls the reRender of displayProducts that does DOM manipulation
});
    
                //This gets all the elements with the class 'btns'
                const addToCartButtons = document.querySelectorAll('.btns');
                 const Cart = document.querySelectorAll('.num-of-items');
                //This will add a click event listerner to each of the 'Add to Cart' buttons
                addToCartButtons.forEach((button) => {
                    button.addEventListener('click', () => {
                        //This will only get the values of the data-image, data-item, and data-price
                        //attributes of the clicked button that I wrote in the HTML code for 'productHTML'
                        //I excluded username and condition as we won't be showing that in the shopping cart
                        const image = button.dataset.image;
                        const item = button.dataset.item;
                        const price = button.dataset.price;
                        const donate = button.parentNode.querySelector('.donate').textContent.includes('donated') ? 'Yes' : 'No';
                        const pickup = button.parentNode.querySelector('.pickup').textContent.includes('pickup') ? 'Yes' : 'No';
                    
                    
                        const cartItem = {
    
                        
                            Image: image,
                            Item: item,
                            Price: price,
                            Donate: donate,
                            Pickup: pickup
    
                        
                        };
                        
                        //A message should appear if the button worked successfully and the item
                        //should be added in the firebase 'Cart_Items' table
    
                        const cartItemsRef = push(child(ref(realdb), 'Cart_Items'));             
                        set(cartItemsRef, cartItem);
                        alert('Item added to cart');
                        
                    });
                });
            }
    
           const cartItemsRef = ref(realdb, "Cart_Items");
    
            onValue(cartItemsRef, (snapshot) => {
                  const numItems = Object.keys(snapshot.val() || {}).length;
    
                  const countOfItems = document.getElementById("countOfItems");
                  countOfItems.textContent = numItems;
            });
            
         });
    
    </script>

</body>
</html>
